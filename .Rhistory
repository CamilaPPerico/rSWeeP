library(Svect)
library(Svect)
build()
library("devtools")
build()
?pool
?poll
install.packages("processx")
install.packages("processx")
document()
library(devtools)
document()
library(SVecy)
library(SVect)
detach("package:SVecy", unload = TRUE)
document()
document()
?pearson
?person
build()
build_win()
check_win()
check_win_*()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocCheck")
vignette(BiocCheck)
vignette("BiocCheck")
library(BiocCheck)
library(BiocCheck)
BiocCheck()
BiocCheck()
setwd("~/")
BiocCheck("SVect")
setwd("C:/Users/Amanda/Desktop")
BiocCheck("SVect_0.0.0.9000.tar")
detach("package:BiocCheck", unload = TRUE)
library(BiocCheck)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocCheck")
library(BiocCheck)
detach("package:BiocCheck", unload = TRUE)
library(BiocCheck)
detach("package:BiocCheck", unload = TRUE)
library(BiocCheck)
setwd("~/Svect")
BiocCheck()
detach("package:BiocCheck", unload = TRUE)
library(BiocCheck)
setwd("C:/Users/Amanda/Desktop")
BiocCheck("SVect_0.0.0.9000.tar.gz")
BiocCheck("SVect_0.0.0.9000.tar.gz")
setwd("~/Svect")
build()
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
BiocCheck("C:/Users/Amanda/Documents/SVect")
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
build()
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
build()
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
document()
document()
document()
library(readr)
setwd("C:/Users/Amanda/Desktop/RobertolibR")
x<-read_csv("R600.txt", col_names = FALSE)
setwd("~/Svect")
devtools::use_data(x, R600)
R600 = x
usethis::use_data(R600)
document()
?R600
packageDescription(Svect)
packageDescription("SVect")
person(given = "Roberto", family = "Raitz", role = "aut", email =
"raittz@ufpr.br")
packageDescription("ape")
document()
?R600
document()
document()
warnings()
warnings()
document()
document()
?R600
?R600
document()
?R600
?R600
?check(0)
?check()
?check
?check
document()
document()
document()
document()
document()
document()
document()
devtools::use_data(R600, internal = TRUE)
usethis::use_data(R600)
use_data(R600)
use_data(R600,overwrite = TRUE`)
''
'
use_data(R600,overwrite = TRUE)
document()
?R600
?SWeeP
document()
library(SVect)
SWeeP()
x <- data(R600)
x
x <- data("R600")
x <- data("R600.rda")
x <- data(R600.rda)
build()
detach("package:SVect", unload = TRUE)
?install.packages
check_win_devel()
check_win_devel()
library(devtools)
check_win_devel()
library(devtools)
document()
document()
document()
document()
library(devtools)
document()
build()
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
library(BiocCheck)
BiocCheck("C:/Users/Amanda/Documents/SVect_0.99.0.tar.gz")
?vapply
setwd("C:/Users/Amanda/Desktop/Dan/RobertolibR")
setwd("~/Svect")
xfas <- ape::read.dna("C:/Users/Amanda/Desktop/Dan/RobertolibR/mamiferos.fasta", format = "fasta",as.character = TRUE)
#Monta em S uma lista só com as sequencia de bases da variavel xfas
S <-list()
S<-seqinr::getSequence(xfas)
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,simplify = TRUE)
library(SVect)
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,simplify = TRUE)
setwd("C:/Users/Amanda/Desktop/RobertolibR")
source('aa2int.R')
source('aa2num2.R')
source('cttm.R')
source('dna2list.R')
source('fas2mat.R')
source('ij2inds.R')
source('prodx.R')
source('sortM.R')
source('primon.R')
source('orthbase.R')
source('vetincol.R')
source('matinline.R')
source('filomat.R')
source('SVect.R')
setwd("C:/Users/Amanda/Desktop/Dan/RobertolibR")
source('aa2int.R')
source('aa2num2.R')
source('cttm.R')
source('dna2list.R')
source('fas2mat.R')
source('ij2inds.R')
source('prodx.R')
source('sortM.R')
source('primon.R')
source('orthbase.R')
source('vetincol.R')
source('matinline.R')
source('filomat.R')
source('SVect.R')
setwd("C:/Users/Amanda/Desktop/Dan/RobertolibR")
source('aa2int.R')
source('aa2num2.R')
source('cttm.R')
source('dna2list.R')
source('fas2mat.R')
source('ij2inds.R')
source('prodx.R')
source('sortM.R')
source('primon.R')
source('orthbase.R')
source('vetincol.R')
source('matinline.R')
source('filomat.R')
source('SVect.R')
aa2num2 <- function(xseq){
b <- dim(xseq);
m <- b[2]
n <- b[1]
xseq <- matrix(as.numeric(aa2int(xseq)), ncol = length(xseq[1, ]))
vls<-matrix(as.double(round(xseq, digits=4))-1, ncol = length(xseq[1, ]))
pot<-kronecker(matrix(1,n,1),matrix(0:(m-1),ncol=2))
premat <-(kronecker(matrix(1,n,m),20)^pot)*vls
mret <- matrix(premat[ ,1]+premat[ , 2], ncol=1) +1
pinot<-(1-matrix(as.numeric(vls<0 | vls>19), ncol= length(xseq[1, ])))
inot<- which(matrix(as.numeric(!(pinot[ ,1]*pinot[ ,2])), ncol = 1)!=0)
mret[inot] = -1
mret
}
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,simplify = TRUE)
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat)
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE = matrix())
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE = 160000)
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE =matrix())
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE ="matrix")
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE =c( 160000))
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE =integer(160000))
#Aplica a função aa2mat em individualmente em cada sequencia de S
S<-vapply(S,aa2mat,FUN.VALUE =double(160000))
matrizid <-t(S)
dim(matrizid)
devtools::build_vignettes()
library(devtools)
devtools::build_vignettes()
build_vignettes()
?build_vignettes
setwd("~/Svect")
build_vignettes()
build_vignettes(pkg = "Svect", dependencies = "VignetteBuilder",
clean = TRUE, upgrade = "never", quiet = TRUE, install = TRUE,
keep_md = TRUE)
build_vignettes(pkg = ".", dependencies = "VignetteBuilder",
clean = TRUE, upgrade = "never", quiet = TRUE, install = TRUE,
keep_md = TRUE)
install.packages("VignetteBuilder")
build_vignettes()
use_vignette("Svect")
install.packages("rmarkdown")
use_vignette("Svect")
?Svect
build_vignettes()
?Svect
vignette(Svect)
vignette(Svect)
library(SVect)
library(SVect)
vignette(Svect)
vignette("Svect")
build_vignettes()
load_all()
vignette("Svect")
load_all()
vignette("Svect")
document()
load_all()
vignette("Svect")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
vignette("Svect")
load_all()
library(BiocCheck)
library(devtools)
library(SVect)
x<-data(orthbase)
x<-orthbase
View(x)
vignette("Svect")
load_all()
vignette("Svect")
library(knitr)
vignette("Svect")
vignette(Svect)
vignette("Svect")
vignette("Svect")
library(SVect)
vignette("Svect")
load_all()
vignette("Svect")
vignette("Svect")
library(BiocCheck)
library(devtools)
browseVignettes(package = "Biostrings")
install.packages("variants")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("variants")
library("variants")
BiocCheck("~/SVect_0.99.0.tar.gz")
news()
news(package = "SVect")
build()
BiocCheck("~/SVect_0.99.0.tar.gz")
install.packages(" testthat")
install.packages("testthat")
install.packages("testthat")
browseVignettes("SVect")
library(BiocStyle)
library(BiocCheck)
library(devtools)
build_vignettes()
load_all()
browseVignettes("SVect")
?sweep
baseMatrix <- orthbase(160000,10)
cat(">No305",
"MFMINILTLILPILLAVAFLTLVERKILGYMQFRKGPNIVGPHGLLQPFADAIKLFTKEPLRPATSSTTMFIIAPVLALT
LALTMWSPLPMPYPLINMNLGVLFMLAMSSLAVYSILWSGWASNSKYALIGALRAVAQTISYEVTLAIILLSVLLMNGSY
TLSTLATTQEQLWLLFPSWPLAMMWFISTLAETNRAPFDLTEGESELVSGFNVEYAAGPFALFFLAEYANIIMMNMLTAI
LFLGTFHNPHNPELYTANLIIKTLLLTMSFLWIRASYPRFRYDQLMHLLWKNFLPLTLALCMWHISLPIMTASIPPQTMN
PLILIILLTTLILGTMMVVTSSHWLLAWIGFEMNMMAFIPIMMKNPTPRATEASTKYLLTQATASALLMMAVIINLMHSG
QWTITKLFNPTASTLMTVALAIKLGLAPFHFWVPEVTQGIPLTTGLILLTWQKLAPLSILYQISPSINLHLMLIMSLLSI
LMGGWGGLNQTQLRKIMAYSSIAHMGWMTAILLYNPTLTLLNLLIYITMTFTMFMLFIQNSTTTTLSLSQTWNKMPVITT
LTMLTLLSMGGLPPLSGFMPKWMIIQELTKNDMLIVPTFMAITALLNLYFYMRLTYSTALTLFPSTNNMKMKWQFNSTKR
TPLLPTAIVISTMLLPLTPMLSILLMFMNRWLFSTNHKDIGTLYLLFGAWAGMVGTGLSLLIRAELGQPGTLIGDDQVYN
VLVTAHAFVMIFFMVMPIMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSFLLLMASSMIEAGAGTGWTVYPPLAGN
LAHAGASVDLTIFSLHLAGVSSILGAINFITTIINMKPPAMTQYQTPLFVWSVLVTAVLLLLSLPVLAAGITMLLTDRNL
NTTFFDPAGGGDPILYQHLFWFFGHPEVYILILPGFGMISHIVTYYSGKKEPFGYMGMVWAMVSIGFLGFIVWAHHMFTV
GMDVDTRAYFTSATMIIAIPTGVKVFSWLATLHGGNIKWSPALMWALGFIFLFTVGGLTGIVLANSSLDIVLHDTYYVVA
HFHYVLSMGAVFAIMGGFVHWFPLFSGYTLNTTWAKIHFMIMFVGVNLTFFPQHFLGLSGMPRRYSDYPDAYTTWNTISS
MGSFISLTAVMLMIFIIWEAFTSKREVLAVDLTSTNLEWLNGCPPPYHTFEEPAFVNPKWSMAYPFQLGFQDAASPIMEE
LLHFHDHTLMIVFLISSLVLYIITLMLTTKLTHTSTMDAQEVETVWTILPAIILILIALPSLRILYMMDEVNNPSLTVKT
MGHQWYWSYEYTDYEDLSFDSYMIPTSDLKPGELRLLEVDNRVVLPMEMTIRMLVSSEDVLHSWAVPSLGLKTDAIPGRL
NQTTLMSTRPGLFYGQCSEICGSNHSFMPIVLELVPLEVFEKWSVSMLMPQLDTSMWLLTILSMLLTLFVLFQLKISKHS
YSPNPKLAHTKTQKQQAPWNTTWTKIYLPLLMNENLFAPFMIPVMLGIPITTLIIILPSMLFPAPNRLINNRTIAIQQWL
TKLTSKQLMNVHSPKGQTWSLMLISLFLFIASTNLLGMLPHSFTPTTQLSMNVGMAIPLWAGTVTTGFRNKTKMSLAHLL
PQGTPTFLIPMLVIIETISLFIQPVAWAVRLTANITAGHLLMHLIGETTLALMNINLFSAFITFTILALLTILEFAVALI
QAYVFTLLVSLYLHDNTMTHQTHSYHMVNPSPWPLTGALSALLMTSGLIMWFHFNSMLLLTLGLSTNILTMYQWWRDIIR
ESTFQGHHTPTVQKGLRYGMILFIVSEVLFFTGFFWAFYHSSLAPTPELGGCWPPTGIRPLNPLEVPLLNTSVLLASGVS
ITWAHHSLMEGNRKHMLQALFITIALGLYFTLLQASEYYEAPFTISDGIYGSTFFVATGFHGLHVIIGSTFLIVCFLRQV
KFHFTSNHHFGFERAAWYWHFVDVVWLFLYVSIYWWGSMNLLLTLLTNTTLALLLVFIAFWLPQLNVYAEKTSPYECGFD
PMGSARLPFSMKFFLVAITFLLFDLEIALLLPLPWAIQSNNLNTMLTMALFLISLLAASLAYEWTQEGLEWAEMTLIHMN
ILMAFSMSLMGLLMYRSHLMSALLCLEGMMLSLFVLAALTILSSHFTLANMMPIILLVFAACEAAIGLALLVMVSNTYGT
DYVQNLNLLQCMLKFIIPTIMLMPLTWLSKNNLIWINSTAHSLLISFSSLLLLNQLNDNSLNYSLMFFSDPLSTPLLILT
MWLLPLMLMASQSHLIKEPPVRKKLYITMLITLQALLIMTFTATELILFYIMFEATLIPTLIIITRWGNQTERLNAGLYF
LFYTLVGSLPLLVALVYLQNTTGSLNFLLLQHWAQPLSTSWSNIFMWLACMMAFLVKMPLYGLYLWLPKAHVEAPIAGSM
VLAAVLLKLGGYGMLRITSMLNPLTEHMAYPFLMLSLWGMIMTSSICLRQTDLKSLIAYSSVSHMALVIAAILIQTPWSY
MGATALMIAHGLTSSMLFCLANSNYERIHSRTMILPGGLQVFLPLMASWWLLASLTNLALPPTINLIGELLVVMSVFSWS
NPTILLMGTNIVITALYSLYMLIMTQRGKHTHHINNITPSFTREHALMALHIIPLLLLSLNPKIILGPLYMNLFTSFTLL
TLLILTTPIMMSHTGSHVNNKYQSYVKNIVFCAFITSLVPAMVYLHTNQETLISNWHWITIQTLKLTLSFKMDYFSLMFM
PVALFITWSIMEFSMWYMHSDPYINQFFKYLLLFLITMLILVTANNLFQLFIGWEGVGIMSFLLIGWWFGRTDANTAALQ
AILYNRIGDIGLLASMAWFLSNMNTWDLEQIFMLNQNPLNFPLMGLVLAAAGKSAQFGLHPWLPSAMEGPTPVSALLHSS
TMVVAGIFLLVRFYPLMENNKLIQTVTLCLGAITTLFTAICALTQNDIKKIIAFSTSSQLGLMMVTIGLNQPYLAFLHIC
THAFFKAMLFLCSGSIIHNLNNEQDIRKMGGLFKALPFTTTALIIGCLALTGMPFLTGFYSKDPIIEAATSSYTNAWALL
LTLIATSLTAVYSTRIIFFALLGQPRFPPSTTINENNPLLINPIKRLLVGSIFAGFILSNSIPPMTTPLMTMPLHLKLTA
LAMTTLGFIIAFEINLDTQNLKHKHPSNSFKFSTLLGYFPTIMHRLPPHLDLLMSQKLATSLLDLTWLETILPKTTALIQ
LKASTLTSNQQGLIKLYFLSFLITITLSMILFNYPEMMMYIVFILSIIFVISFVGVSSKPSPIYGGLGLIVGGGVGCGVI
LSFGGSFLGLMVFLIYLGGMLVVFGYTTAMATEQYPEVWVSNKVVLGAFVLGLVVEFLIVIYALKSGEVKIMFEFDGLGD
WVVYDTGGSGVFSEEATGIAALYSYGVWLVIVTGWSLFISVVIIMEITRGSMTNIRKTHPLMKIVNDAFVDLPTPSNISS
WWNFGSLLGLCLIMQILTGLFLAMHYTPDTTTAFSSVTHICRDVNYGWIIRYLHANGASMFFICLYAHMGRGLYYGSYAF
RETWNIGVILLFTVMATAFVGYVLPWGQMSFWGATVITNLLSAIPYIGTTLVEWIWGGFSVDKATLTRFFAFHFILPFII
LALAIVHLIFLHETGSNNPTGIPSDMDKIPFHPYHTIKDILGALLLILILLMLTLFAPDLLGDPDNYTPANPLSTPAHIK
PEWYFLFAYAILRSIPNKLGGVLALLLSILILAFIPMLHTSNQRSMMFRPFSQFLFWVLVADLLTLTWIGGQPVEHPYMI
VGQLASILYFLLILVLMPVTSLIENKLMKW",
">No304",
"MFMINVLLLIIPILLAVAFLTLVERKILGYMQLRKGPNIVGPYGLLQPIADALKLFIKEPLQPLTSSTSMFIIAPILALT
LALTMWIPLPMPYPLINMNLGILFMLAMSSLAVYSILWSGWASNSKYALIGALRAVAQTISYEVTLAIILLSVLLMSGSF
TLSTLIITQEYLWLIFPSWPLAMMWFISTLAETNRAPFDLTEGESELVSGFNVEYAAGPFALFFLAEYANIIMMNIFTTT
LFLGAFHSPYLPELYSINFTMKTLLLTCSFLWIRASYPRFRYDQLMHLLWKNFLPLTLALCMWHVSLPIMLSSIPPQTMN
PLILTIILMTVFLGTMIVMASSHWLMIWIGFEMNLLAIIPILMKKYNPRAMEASTKYFLTQATASMLLMMAIIINLMHSG
QWTITKVFNPTASIIMTLALAMKLGLTPFHFWVPEVTQGISLTSGLILLTWQKLAPMSILYQISPSINLNILLTMAVLSI
LVGGWGGLNQTQLRKIMAYSSIAHMGWMAAILVYNPTLTMLNMLIYIMMTLTMFMLFIHSSSTTTLSLSHTWNKAPLITT
LILITLLSMGGLPPLSGFMPKWMIIQELTKNSSIILPTLMAIMALLNLYFYMRLTYSTSLTMFPSTNNMKMKWQFETKQI
TLLPPLIIASSLLLPLTPMLSILDMFINRWLFSTNHKDIGTLYLLFGAWAGMVGTALSLLIRAELGQPGTLLGDDQIYNV
IVTAHAFVMIFFMVMPIMIGGFGNWLVPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLASSMIEAGAGTGWTVYPPLAGNL
AHAGASVDLTIFSLHLAGVSSILGAINFITTIINMKPPALSQYQTPLFVWSVLITAVLLLLALPVLAAGITMLLTDRNLN
vTTFFDPAGGGDPILYQHLFWFFGHPEVYILILPGFGMISHIVTYYSGKKEPFGYMGMVWAMMSIGFLGFIVWAHHMFTVG
MDVDTRAYFTSATMIIAIPTGVKVFSWLATLHGGNIKWSPAMLWALGFIFLFTVGGLTGIVLANSSLDIVLHDTYYVVAH
vFHYVLSMGAVFAIMGGFVHWFPLFSGYTLNQTWAKIHFTIMFVGVNMTFFPQHFLGLSGMPRRYSDYPDAYTTWNTISSM
GSFISLTAVMLMIFMIWEAFASKREVSTVELTSTNLEWLHGCPPPYHTFEEPAYVNLKMAYPFQLGFQDATSPIMEELLH
vFHDHTLMIVFLISSLVLYIISSMLTTKLTHTSTMDAQEVETIWTILPAIILILIALPSLRILYMMDEINNPSLTVKTMGH
QWYWSYEYTDYEDLTFDSYMIPTSDLKPGELRLLEVDNRVVLPMEMTIRMLISSEDVLHSWAVPSLGLKTDAIPGRLNQT
TLVASRPGLYYGQCSEICGSNHSFMPIVLELVPLKYFEEWSASMLMPQLDTSTWFINIVSMILTLFIVFQLKISKHSYPM
HPEAKTTKMAKRLTPWESKWTKIYSPLSLPQQMNENLFASFATPTMMGLPIVILIIMFPSILFPSSNRLINNRLISIQQW
LVQLTSKQMMTIHNNKGQTWTLMLMSLILFIGSTNLLGLLPHSFTPTTQLSMNLGMAIPLWAGTVFMGFRHKTKAALAHF
LPQGTPIFLIPMLVIIETISLFIQPMALAVRLTANITAGHLLIHLIGGATLALMDISPSTALITFIILILLTILEFAVAM
IQAYVFTLLVSLYLHDNTMTHQTHAYHMVNPSPWPLTGALSALLMTSGLAMWFHFNSTLLLALGLLTNILTMYQWWRDII
RESTFQGHHTSIVQKGLRYGMILFIISEVFFFSGFFWAFYHSSLAPTPELGGCWPPTGIHPLNPLEVPLLNTSVLLASGV
SITWAHHSLMEGNRKNMLQGLFITISLGVYFTLLQASEYYEASFTISDGVYGSTFFVATGFHGLHVIIGSTFLIVCFLRQ
LKFHFTSSHHFGFEAAAWYWHFVDVVWLFLYVSIYWWGSMNLMLTLLTNTLLASLLVLIAFWLPQLNIYAEKTSPYECGF
DPMGSARLPFSMKFFLVAITFLLFDLEIALLLPLPWASQTTNLNTMLIMALILISLLAISLAYEWTQKGLEWTEMSLAHI
NIFLAFTVSLVGLLMYRSHLMSSLLCLEGMMLSLFVMATMVVLNTHFTLASMMPIILLVFAACERALGLSLLVMVSNTYG
VDHVQNLNLLQCMLKIIIPTIMLMPLTWLSKKNMIWINTTTYSLLISLISLSLLNQPNNNSLNFSLMFFSDPLSAPLLVL
TTWLLPLMLMASQHHLSKEPLIRKKLYITMLAMLQTFLIMTFTATELISFYILFEATLVPTLIIITRWGNQTERLNAGLY
FLFYTLVGSLPLLVALISIQNLTGSLNFLLIQYWNQALPDSWSNIFLWLACMMAFMVKMPLYGLRLWLPKAHVEAPIAGS
MVLAAILLKLGGYGMLRITMMLNPQTNFMAYPFLMLSLWGMIMTSSICLRQTDLKSLIAYSSVSHMALVIVAVLIQTPWS
YMGATALMIAHGLTSSMLFCLANSNYERTHSRTMILARGLQTLLPLMAAWWLLASLTNLALPPSINLIGELFVVMSSFSW
SNITIILMGANITITALYSLYMLITTQRGKYTHHINSIKPSFTRENALMALHMTPLLLLSLNPKIILGFTYMNMFSSLML
ASLSVLTLPIMSSILNTHKNSTYPHHVKNIISYAFITSLIPTMMFIHSGQETIISNWHWMTIQTLKLSLSFKLDYFSMIF
VPVALFVTWSIMEFSLWYMHSDPYITRFFKYLLTFLITMMILVTANNLFQLFIGWEGVGIMSFLLIGWWYGRTDANTAAL
QAILYNRIGDIGFIMAMAWFLFNTNTWDLQQIFMLDPNLTNLPLLGLLLAATGKSAQFGLHPWLPSAMEGPTPVSALLHS
STMVVAGVFLLIRFHPLMENNKTIQSLTLCLGAITTLFTAICALTQNDIKKIIAFSTSSQLGLMIVTIGINQPYLAFLHI
CTHAFFKAMLFMCSGSIIHSLNDEQDIRKTGGLFNAMPFTTTSLIIGSLALTGMPFLTGFYSKDLIIETANTSYTNAWAL
LMTLIATSLTAVYSTRIIFFALLGQPRFLPLTTINENNPFLINSIKRLLIGSIFAGFFISNNIYPTTIPEMTMPIYMKLT
ALTVTILGFTLALELSLITHNLKLEHPTNMFKFSNLLGYYPTIMHRLPPLANLSMSQKSASLLLDSIWLENILPKSISQF
QMKTSILISTQKGQIKLYFLSFLITLTLSMLLFNLHEMMTYIVFILSVIFVIGFVGFSSKPSPIYGGLVLIVSGGVGCGI
IMNFGGSFLGLMVFLIYLGGMLVVFGYTTAMATEQYPEVWVSNATVMGVFLLGLLMEVMLVLYVLKSEEVGVVFKFSSVG
HWAIYDIGNSGVFSEEIMGVAALYSYGAWVVVVTGWSLLVGVLVILEVTRGDMTNIRKSHPLIKIINHSFIDLPTPSNIS
SWWNFGSLLGICLILQILTGLFLAMHYTSDTTTAFSSVTHICRDVNYGWIIRYLHANGASMFFICLFIHVGRGLYYGSYT
FLETWNIGIILLFTVMATAFMGYVLPWGQMSFWGATVITNLLSAIPYIGTTLVEWIWGGFSVDKATLTRFFAFHFILPFI
ITALVIVHLLFLHETGSNNPSGIPSDMDKIPFHPYYTIKDILGLLLLVLLLLTLVLFSPDLLGDPDNYTPANPLSTPPHI
KPEWYFLFAYAILRSIPNKLGGVLALILSILILALIPTLHMSKQRSMMFRPLSQCVFWLLVADLLTLTWIGGQPVEHPYV
IIGQLASILYFSLILIFMPLASTIENNLLKW",
">No306",
"MFMINILSLIIPILLAVAFLTLVERKVLGYMQLRKGPNVVGPYGLLQPIADALKLFTKEPLRPATSSTSMFIIAPILALS
LALTMWIPLPMPYPLINMNLGVLFMLAMSSLAVYSILWSGWASNSKYALIGALRAVAQTISYEVTLAIILLSVLLMNGSY
TLSTLITTQEHIWMIFTSWPLAMMWFISTLAETNRAPFDLTEGESELVSGFNVEYAAGPFALFFMAEYANIIMMNAFTAI
LFLGAFHDPHTSELYTINFVLKTLTLTIIFLWIRASYPRFRYDQLMHLLWKSFLPLTLALCMWHISLPIMTAGIPPQTMN
PMIYATLVMTLMSGTMLVMISSHWLLIWMGFEMNLLAITPVLMKNFNPRAMEAATKYFLTQATASMMLMMAIIINLLYSG
QWTITKMFNPTAMMIMTMALAMKLGLSPFHFWVPEVTQGISLQAGLLLLTWQKLAPLSVLCQISQSINPNLMLTMAMLSI
LVGGWGGLNQTQLRKIMAYSSIAHMGWMTAVLPYNTTMTILNLLIYITMTLAMFMLLIHNSTTTILSLSHTWNKTPIITS
LMMMTLLSMGGLPPLSGFMPKWMIIQEMTKNESIIMPTLMAMTALLNLYFYMRLAYSSSLTMFPSTNNMKMKWQFEYTKQ
MKLLPTMIVLSTLILPMTPALSSLNMFVNRWLYSTNHKDIGTLYLLFGAWAGMVGTALSLLIRAELGQPGTLLGDDQIYN
VIVTAHAFVMIFFMVMPIMIGGFGN
WLVPLMIGAPDMAFPRMNNMSFWLLPPSFLLLLASSMVEAGAGTGWTVYPPLAGNLAHAGASVDLTIFSLHLAGVSSILG
AINFITTIINMKPPAMSQYQTPLFVWSVLITAVLLLLSLPVLAAGITMLLTDRNLNTTFFDPAGGGDPILYQHLFWFFGH
PEVYILILPGFGMISHIVTYYSGKKEPFGYMGMVWAMMSIGFLGFIVWAHHMFTVGMDVDTRAYFTSATMIIAIPTGVKV
FSWLATLHGGNIKWSPAMLWALGFIFLFTVGGLTGIVLANSSLDIVLHDTYYVVAHFHYVLSMGAVFAIMGGFVHWFPLF
SGYTLNQAWAKVHFVIMFVGVNMTFFPQHFLGLSGMPRRYSDYPDAYTAWNTISSMGSFISLTAVMLMIFIIWEAFASKR
EVSAVELTSTNLEWLHGCPPPYHTFEEPTYINLK
MAYPFQLGFQDATSPIMEELLHFHDHTLMIVFLISSLVLYIISLMLTTKLTHTSTMDAQEVETIWTILPAIILILIALPS
LRILYMMDEINNPALTVKTMGHQWYWSYEYTDYEDLTFDSYMIPTSDLKPGEMRLLEVDNRVVLPMEMTIRMLVSSEDVL
HSWAVPSLGLKTDAIPGRLNQTTLMSTRPGLYYGQCSEICGSNHSFMPIVLELVPLKYFEKWSTSMLTG
MPQLDTSTWFLTIMSMTMTLFILFQLKISNYSYPLNPEPTEMKTQKHSTPWEMKWTKIYLPLSLPLR
MNENLFASFITPTMMGLPIVTLIIMFPSLLFPTPKRLINNRMISIQQWLTQLTSKQMMAIHNQKGQTWSLMLMSLIMFIG
STNILGLLPHSFTPTTQLSMNLGMAIPLWAATVFTGFRHKTKASLAHFLPQGTPVPLIPMLVIIETISLFIQPVALAVRL
TANITAGHLLIHLIGGATLALLNINTMVASITFIILIMLTILEFAVALIQAYVFTLLVSLYLHDNT
MTHQTHAYHMVNPSPWPLTGALSALLMTSGLAMWFHFNSIFLLSLGLLTNTLTMYQWWRDIIRESTFQGHHTSVVQKGLR
YGMILFIISEVLFFTGFFWAFYHSSLAPTPELGGCWPPTGIHPLNPLEVPLLNTSVLLASGVSITWAHHSLMEGDRKHML
QALGITIALGLYFTLLQASEYYEAPFTISDGVYGSTFFVATGFHGLHVIIGSTFLAVCFLRQLKFHFTSNHHFGFEAAAW
YWHFVDVVWLFLYVSIYWWGS
MNIMLTLLMNVTLASLLVLIAFWLPQLNAYSEKTSPYECGFDPMGSARLPFSMKFFLVAITFLLFDLEIALLLPLPWASQ
TNDLKTMLTMALFLLTLLAASLAYEWTQKGLEWTE
MPLVYMNIIMAFAIALMGLLMYRSHLMSSLLCLEGMMLSLFIMSTLIVLNTHFTLASMMPIILLVFAACEAALGLSLLVM
VSNTYGNDYVQNLNLLQC
MLKIIVPTTMLLPMTWMSKHNMIWINATVHSLLISLISLSLLNQLSDNSLNFSLMFFSDSLSTPLLILTTWLLPLMLMAS
QSHLSKETTTRKKLYITMLILLQLFLIMTFTATELILFYILFEATLVPTLIIITRWGNQTERLSAGLYFLFYTLAGSLPL
LVALVYIQNTMGSLNFLIIHYWSHPLSNTWSNIFMWLACIMAFMVKMPLYGLHLWLPKAHVEAPIAGSMVLAAVLLKLGG
YGMMRITTILNPLTNYMAYPFLMLSMWGMIMTSSICLRQTDLKSLIAYSSVSHMALVIVAIMIQTPWSFMGATALMIAHG
LTSSMLFCLANTNYERVHSRTMILARGLQTFLPLMATWWLMASLTNLALPPSINLIGELLIIMSSFSWSNITIILMGANM
MITALYSLYMLIMTQRGKYSHHINNIKPSFTRENTLMALHMLPLLLLTLNPKMILGPLY
MNSFAPLTLTTLTILTMPIMMSNSNIYKTNLYPNYVKNTVSCAFILSLIPLLMFIHTGQETIISNWHWMTLQTMKLSLSF
KMDYFSVMFIPVALFVTWSIMEFSMWYMHSDPFINRFFKYLLLFLITMMILVTANNLFQLFIGWEGVGVMSFLLIGWWHG
vRTDANTAALQAILYNRIGDIGFVLSMAWFMSHSNAWDFQQIFMLNSKCPNMPLMGLLLAAAGKSAQFGLHPWLPSAMEGP
TPVSALLHSSTMVVAGVFLLIRFHPLMETNKLVQTITLCLGAITTLFTALCAITQNDIKKIVAFSTSSQLGLMMVTIGIN
QPHLAFLHICMHAFFKAMLFMCSGSIIHNLNNEQDIRKMGGLYKAMPLTTTALIIGSLALTGMPYLTGFYSKDLIIEAAN
VSHTNAWALLMTLIATSLTAAYSTRIIFFALLGQPRFSPLVLINENNPLLINSIMRLLTGSIFAGFIISNSIPPMTMPNM
TMPLYMKMTALVATIMGFMLALELNNMTYYLKFNYSSQTYKFSNMLGYYPSIMHRLPTYHNLSMSQKSASSLLDLIWLET
ILPKTTSYIQTKMSIMVSNQKGLVKLYFLSFLITIMMSMMLFNYHE
MTMYIAFILSVIFVIGFVGFSSKPSPIYGGVGLIVSGGVGCGIVLNFGGSFLGLMVFLIYLGGMLVVFGYTTAMATEVYP
EVWVSNKTVLGVFVSGLMMEFCMVYYVLKEEEVEVVFKFNGLGDWVIYDTGDSGFFSEEAMGIAALYSYGTWLVIVTGWS
LLIGVVVIMEITRGN
MTNIRKSHPLMKIINNAFIDLPAPSNISSWWNFGSLLGICLILQILTGLFLAMHYTSDTTTAFSSVTHICRDVNYGWVIR
YLHANGASMFFICLFIHVGRGLYYGSYMFLETWNIGVILLFTVMATAFMGYVLPWGQMSFWGATVITNLLSAIPYIGTNL
VEWIWGGFSVDKATLTRFFAFHFILPFIIAALATVHLLFLHETGSNNPTGISSDMDKIPFHPYYTIKDILGALFMMLILL
ILVLFSPDLLGDPDNYTPANPLNTPPHIKPEWYFLFAYAILRSIPNKLGGVLALVASILILILMPMLHTSKQRSMMFRPL
SQCLFWVLVADLITLTWIGGQPVEHPFIIIGQLASILYFLIILVLMPITSIIENNLLKW",
file = "exdna.fas", sep = "\n")
return <- SWeeP("exdna.fas",baseMatrix)
distancia <- dist(return, method = "euclidean")
tree <- hclust(distancia, method="ward.D")
plot(tree, hang = -1, cex = 1)
browseVignettes("BiocStyle]")
browseVignettes("BiocStyle")
browseVignettes("BiocStyle")
BiocCheck("~/SVect_.0.99.0.tar.gz")
build()
BiocCheck("~/SVect_.0.99.0.tar.gz")
BiocCheck("~/SVect_0.99.0.tar.gz")
library("ape")
?polymophspace
?phylomorphospace
library(phytools)
?phylomorphospace
