library(rSWeeP)
library("readr")
library("ape")
library("seqinr")

orthBase <- as.matrix(read_csv("R600.txt", col_names =FALSE))
LDM<-sWeeP("All.fasta",orthBase)
distancia <- dist(LDM, method = "euclidean")
tree <- hclust(distancia, method="ward.D")
xfas <- read.dna("combined.fasta", format = "fasta",as.character = TRUE)
tree$labels <- names(xfas)
plot(tree, hang = -1, cex = 1)
?read.dna



xfas = Biostrings::readAAStringSet(xfas, "fasta", use.names = FALSE)



setGeneric(  "sWeeP",  function(xfas, orthoBase) {
  standardGeneric("sWeeP")
}
)
setMethod("sWeeP", "character", function(xfas, orthoBase)
{
  xfas = Biostrings::readAAStringSet(xfas, "fasta", use.names = FALSE)
  sWeeP(xfas,orthoBase)
}
)
setMethod("sWeeP", "AAStringSet", function(file, orthoBase) {
  sWeeP(file, orthoBase)
})




sWeeP <- function(xfas, orthBase) {
  xfas = Biostrings::readAAStringSet(xfas, "fasta", use.names = FALSE)
  stopifnot(is(orthBase, "matrix"))
  stopifnot(is(xfas, "AAStringSet"))
  if (length(xfas) > 2001) {
    barra <- round(length(xfas)/2000)
    Bigprojected <- matrix(2, nrow = length(xfas), ncol = dim(baseMatrix)[1])
    blocksToConvert <- length(xfas)/barra
    block <- round(length(xfas)/round(length(xfas)/blocksToConvert))
    p <- 1
    for (i in seq_len(length(xfas)/block)) {
      message("running: ", i, " of: ", barra)
      if (p + block < length(xfas)) {
        projected <- fas2mat(xfas[p:(p + block)]) %*% orthBase
        Bigprojected[p:(p + block), ] <- projected
        p <- p + block + 1
      } else {
        projected <- fas2mat(xfas[p:length(xfas)]) %*% orthBase
        Bigprojected[p:length(xfas), ] <- projected
      }
      projected <- Bigprojected
    }
  } else {
    matrizid <- fas2mat(xfas)
    projected <- matrizid %*% orthBase
  }
  projected
}



section{Methods}{
  \describe{
    \item{show}{\code{signature(object = "equation")}: Prints the
      formula and the type of an equation.}


    #' @method AAStringSet can be aplied directly to x fas
    #' @method character  can be aplied to xfas as a path to a FASTA format file


sWeeP <- function(xfas, orthBase) {
  xfas = Biostrings::readAAStringSet(xfas, "fasta", use.names = FALSE)
  stopifnot(is(orthBase, "matrix"))
  stopifnot(is(xfas, "AAStringSet"))
  if (length(xfas) > 2001) {
    barra <- round(length(xfas)/2000)
    Bigprojected <- matrix(2, nrow = length(xfas), ncol = length(orthBase))
    blocksToConvert <- length(xfas)/barra
    block <- round(length(xfas)/round(length(xfas)/blocksToConvert))
    p <- 1
    for (i in seq_len(length(xfas)/block)) {
      message("running: ", i, " of: ", barra)
      if (p + block < length(xfas)) {
        projected <- fas2mat(xfas[p:(p + block)]) %*% orthBase
        Bigprojected[p:(p + block), ] <- projected
        p <- p + block + 1
      } else {
        projected <- fas2mat(xfas[p:length(xfas)]) %*% orthBase
        Bigprojected[p:length(xfas), ] <- projected
      }
      projected <- Bigprojected
    }
  } else {
    matrizid <- fas2mat(xfas)
    projected <- matrizid %*% orthBase
  }
  projected
}